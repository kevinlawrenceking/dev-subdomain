-- PURPOSE: Create tables for share functionality
-- AUTHOR: Generated by GitHub Copilot
-- DATE: 2025-07-19

-- Create shareTokens table
CREATE TABLE IF NOT EXISTS shareTokens (
    shareID INT AUTO_INCREMENT PRIMARY KEY,
    userID INT NOT NULL,
    token VARCHAR(64) NOT NULL,
    shareType VARCHAR(32) NOT NULL,
    createdDate DATETIME NOT NULL,
    expiryDate DATETIME NULL,
    isActive TINYINT(1) NOT NULL DEFAULT 1,
    CONSTRAINT UC_ShareTokens_Token UNIQUE (token),
    CONSTRAINT FK_ShareTokens_Users FOREIGN KEY (userID) REFERENCES taousers(userID)
);

-- Create shareViews table to track views
CREATE TABLE IF NOT EXISTS shareViews (
    viewID INT AUTO_INCREMENT PRIMARY KEY,
    shareID INT NOT NULL,
    viewDate DATETIME NOT NULL,
    ipAddress VARCHAR(45) NULL,
    CONSTRAINT FK_ShareViews_ShareTokens FOREIGN KEY (shareID) REFERENCES shareTokens(shareID)
);

-- Add index for performance
CREATE INDEX IDX_ShareTokens_Token ON shareTokens(token);
CREATE INDEX IDX_ShareTokens_UserID ON shareTokens(userID);
CREATE INDEX IDX_ShareViews_ShareID ON shareViews(shareID);

-- Insert procedure to generate a new share token
DELIMITER //
CREATE PROCEDURE IF NOT EXISTS sp_CreateShareToken(
    IN p_userID INT,
    IN p_shareType VARCHAR(32),
    IN p_expireDays INT
)
BEGIN
    DECLARE v_token VARCHAR(64);
    
    -- Generate a unique token
    SET v_token = CONCAT(
        SUBSTRING(MD5(RAND()), 1, 12),
        '-',
        SUBSTRING(MD5(p_userID), 1, 8),
        '-',
        SUBSTRING(MD5(NOW()), 1, 12)
    );
    
    -- Insert the token
    INSERT INTO shareTokens (
        userID,
        token,
        shareType,
        createdDate,
        expiryDate,
        isActive
    ) VALUES (
        p_userID,
        v_token,
        p_shareType,
        NOW(),
        IF(p_expireDays > 0, DATE_ADD(NOW(), INTERVAL p_expireDays DAY), NULL),
        1
    );
    
    -- Return the created token
    SELECT 
        shareID,
        token,
        shareType,
        createdDate,
        expiryDate
    FROM 
        shareTokens
    WHERE 
        shareID = LAST_INSERT_ID();
END //
DELIMITER ;

-- Sample data for testing (comment out for production)
/*
CALL sp_CreateShareToken(1, 'relationships', 30);
CALL sp_CreateShareToken(1, 'calendar', 30);
*/
