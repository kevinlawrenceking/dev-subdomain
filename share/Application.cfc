<cfcomponent output="false">
    <!--- 
        PURPOSE: Application component for the share directory
        AUTHOR: Generated by GitHub Copilot
        DATE: 2025-07-19
        DESCRIPTION: Standalone application for public sharing while reusing main app resources
    --->

    <cfset host=ListFirst(cgi.server_name, ".")/>

    <!--- Set the application name to be distinct from main app --->
    <cfscript>
        this.name = "TAO_Share";
        this.sessionManagement = true;
        this.applicationTimeout = createTimeSpan(11, 1, 0, 0);
        this.sessionTimeout = createTimeSpan(0, 9, 20, 0);
        
        // Create mappings to main app resources
        this.mappings["/app"] = expandPath("../app");
        this.mappings["/services"] = expandPath("../services");
        this.mappings["/include"] = expandPath("../include");
        
        // Set the main app path for resource access
        application.mainAppPath = expandPath("../app");
    </cfscript>

    <cffunction name="onApplicationStart" returnType="boolean" output="false">
        <cfscript>
            // Configure environment based on hostname
            if (host is "app") {
                application.dsn = "abo";
                application.information_schema = "actorsbusinessoffice";
            } else {
                application.dsn = "abod";
                application.information_schema = "actorsbusinessoffice";
            }
            
            this.datasource = application.dsn;
            application.datasourceName = application.dsn;
            
            // Get current version
            try {
                var versionQuery = new Query();
                versionQuery.setDatasource(application.dsn);
                versionQuery.setSQL("SELECT verid FROM taoversions ORDER BY isactive DESC, verid DESC LIMIT 1");
                var result = versionQuery.execute().getResult();
                application.rev = result.verid;
            } catch(any e) {
                application.rev = "1.0";
            }
            
            // Set up media paths (same as main app)
            application.baseMediaPath = "C:\home\theactorsoffice.com\media-" & application.dsn;
            application.baseMediaUrl = "/media-" & application.dsn;
            
            // Set flags for share application
            application.isShareApp = true;
            application.requireLogin = false;
            
            // Share the main app's assets
            application.cssPath = "/app/assets/css";
            application.jsPath = "/app/assets/js";
            application.imagesPath = "/app/assets/images";
            
            return true;
        </cfscript>
    </cffunction>

    <cffunction name="onRequestStart" returnType="boolean" output="false">
        <cfargument name="targetPage" type="string" required="true" />
        
        <cfscript>
            // Ensure application variables are set
            if (not structKeyExists(application, "dsn")) {
                onApplicationStart();
            }
            
            // Validate share tokens as needed
            if (structKeyExists(url, "shareToken")) {
                // Here you would validate the token and set appropriate access variables
                // This is where you'd implement the unique identifier validation
            }
            
            return true;
        </cfscript>
    </cffunction>
    
    <cffunction name="onMissingTemplate" returnType="boolean" output="true">
        <cfargument name="targetPage" type="string" required="true" />
        
        <cfoutput>
            <h2>Sorry, the page you requested cannot be found.</h2>
            <p>Please check the URL and try again.</p>
        </cfoutput>
        
        <cfreturn true />
    </cffunction>

</cfcomponent>
